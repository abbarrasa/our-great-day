imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es
    mailer:
        default_sleep: 1
        email_admin: '%mailer_email_admin%'
        email_manager: '%mailer_email_manager%'
        from_name: '%mailer_from_name%'
        embedded_images:
            - header-small.jpg
            - font-awesome_4-7-0_facebook.png
            - font-awesome_4-7-0_google-plus.png
            - font-awesome_4-7-0_twitter.png
    # Maintenance mode
    maintenance: false

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        email_admin: '%mailer_email_admin%'
        api_key: '%google.api_key%'
        wedding_date: '%wedding.date%'
        version: 2.2.2
    form_themes:
        - 'form/fields.html.twig'
    paths:
        '%kernel.project_dir%/src/Ogd/AdminBundle/Resources/view': Admin

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Assetic Configuration
assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

# User configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User
    from_email:
        address: "%mailer_email_admin%"
        sender_name: '%mailer_from_name%'
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)
    service:
        user_manager: sonata.user.orm.user_manager
    registration:
        form:
            type: Application\FOS\UserBundle\Form\Type\RegistrationType
    resetting:
        retry_ttl: 7200
        token_ttl: 86400
        form:
            type: Application\FOS\UserBundle\Form\Type\ResettingType
    profile:
        form:
            type: Application\FOS\UserBundle\Form\Type\ProfileType
    change_password:
        form:
            type: Application\FOS\UserBundle\Form\Type\ChangePasswordType        

# Sonata Admin Configuration
sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    class:
        user: Application\Sonata\UserBundle\Entity\User
        group: Application\Sonata\UserBundle\Entity\Group
    profile:
        default_avatar: 'bundles/app/images/user-default.jpg' # Default avatar displayed if the user doesn't have one

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]

sonata_admin:
    dashboard:
        groups:
            admin.group.administration:
#                keep_open: true
                label: admin.group.administration
                label_catalogue: AdminBundle
                icon: '<i class="fa fa-gears"></i>'
#                items:
#                    - sonata.media.admin.media
#                    - sonata.media.admin.gallery

            admin.group.settings:
#                keep_open: true
                label: admin.group.settings
                label_catalogue: AdminBundle
                icon: '<i class="fa fa-sliders"></i>'

nzo_url_encryptor:
    secret_key: "%secret%"      # optional, max length of 100 characters.
    secret_iv:  "%secret_iv%"   # optional, max length of 100 characters.
    cipher_algorithm: 'aes-256-ctr'
