{% extends 'knp_menu.html.twig' %}

{% block item %}
{% import "knp_menu.html.twig" as macros %}
{% if item.displayed %}
    {%- set attributes = item.attributes %}
    {%- set is_dropdown = attributes.dropdown|default(false) %}
    {# https://gist.github.com/Invis1ble/503db8bb9ff6dafc52c8b2bf7c6fec42 #}
    {%- set icon = item.getExtra('icon') %}    
    {%- set divider_prepend = attributes.divider_prepend|default(false) %}
    {%- set divider_append = attributes.divider_append|default(false) %}

    {# unset bootstrap specific attributes #}
    {%- set attributes = attributes|merge({'dropdown': null, 'divider_prepend': null, 'divider_append': null }) %}

    {%- if divider_prepend %}
        {{ block('dividerElement') }}
    {%- endif %}

    {# building the class of the item #}
    {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
    {%- if matcher.isCurrent(item) %}
        {%- set classes = classes|merge([options.currentClass]) %}
    {%- elseif matcher.isAncestor(item, options.depth) %}
        {%- set classes = classes|merge([options.ancestorClass]) %}
    {%- endif %}
    {%- if item.actsLikeFirst %}
        {%- set classes = classes|merge([options.firstClass]) %}
    {%- endif %}
    {%- if item.actsLikeLast %}
        {%- set classes = classes|merge([options.lastClass]) %}
    {%- endif %}

    {# building the class of the children #}
    {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}

    {# adding classes for dropdown #}
    {%- if is_dropdown %}
        {%- set classes = classes|merge(['dropdown']) %}
        {%- set childrenClasses = childrenClasses|merge(['dropdown-menu']) %}
    {%- endif %}

    {# putting classes together #}
    {%- if classes is not empty %}
        {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}
    {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}

    {# displaying the item #}
    <li{{ macros.attributes(attributes) }}>
        {%- if is_dropdown %}
            {{ block('dropdownElement') }}
        {%- elseif item.uri is not empty and (not item.current or options.currentAsLink) %}
            {{ block('linkElement') }}
        {%- else %}
            {{ block('spanElement') }}   
        {%- endif %}
    </li>

    {%- if divider_append %}
        {{ block('dividerElement') }}
    {%- endif %}
{% endif %}
{% endblock %}

{% block dividerElement %}
    <div class="dropdown-divider"></div>
{% endblock %}

{% block linkElement %}
    {% import "knp_menu.html.twig" as macros %}
	<a href="{{ item.uri }}"{{ macros.attributes(item.linkAttributes) }}>
       	{{ block('icon') }}
		{{ block('label') }}
	</a>
        {# render the list of children #}
        {{ block('list') }}	
{% endblock %}

{% block spanElement %}
    {% import "knp_menu.html.twig" as macros %}
	<span>{{ macros.attributes(item.labelAttributes) }}>
       	{{ block('icon') }}
		{{ block('label') }}
	</span>
        {# render the list of children #}
        {{ block('list') }}	 	
{% endblock %}

{% block dropdownElement %}
    {% import "knp_menu.html.twig" as macros %}
    {%- set classes = item.linkAttribute('class') is not empty ? [item.linkAttribute('class')] : [] %}
    {%- set classes = classes|merge(['dropdown-toggle']) %}
    {%- set attributes = item.linkAttributes %}
    {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- set attributes = attributes|merge({'data-toggle': 'dropdown'}) %}
    <a href="#"{{ macros.attributes(attributes) }}>
        {{ block('icon') }}
        {{ block('label') }}
    </a>
    <div class="dropdown-menu">
        {% set children = item.children %}
        {% for item in children %}
            {%- set attributes = item.attributes %}
            {%- set divider_prepend = attributes.divider_prepend|default(false) %}
            {%- set divider_append = attributes.divider_append|default(false) %}

            {%- if divider_prepend %}
                {{ block('dividerElement') }}
            {%- endif %}

            {{ block('linkElement') }}

            {%- if divider_append %}
                {{ block('dividerElement') }}
            {%- endif %}
        {% endfor %}
    </div>
{% endblock %}

{% block icon %}
    {%- if icon is not empty %}
    {#{% if item.attribute('icon') is not empty  %}#}
        {% if icon starts with 'fa' %}
    	    <i class="{{ icon }}"></i>
	{% else %}
            <i class="material-icons">{{ icon }}</i>
	{% endif %}
	
	{% if item.extras.icon_image %}
	   {% if app.user.picture is not null %}
        	{% set filepath = user_directory ~ '/' ~ app.user.picture %}
        	<img src="{{ filepath|data_uri }}" alt="{{ app.user.username }}" class="image-menu">
    	   {% else %}
        	{% image 'bundles/app/images/user-default.jpg' %}
        	<img src="{{ asset_url }}" alt="{{ user.username }}" class="image-menu">
	       {% endimage %}
	   {% endif %}
	{% endif %}
    {% endif %}
{% endblock %}

{% block label %}
    {% import "knp_menu.html.twig" as macros %}
    {%- set attributes = item.labelAttributes %}
    {%- set translationDomain = item.extras.translation_domain|default(null) %}
    <p{{ macros.attributes(attributes) }}>{{ item.label|trans({}, translationDomain) }}</p>
{% endblock %}
