<?php

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\Validator\Constraints as Assert;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * @Vich\Uploadable
 *
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */
class User extends BaseUser
{
    /**
     * @var int $id
     */
    protected $id;
    protected $guest;
    protected $greetings;
    protected $greetingComments;
    protected $postComments;
    protected $picture;
    /**
     * @var File
     *
     * @Vich\UploadableField(mapping="user_picture", fileNameProperty="picture")
     * @Assert\Image(maxWidth=180, maxHeight=180, maxSize="800k")
     */
    protected $pictureFile;

    /**
     * Get id.
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set guest.
     *
     * @param $guest
     */
    public function setGuest($guest)
    {
        $this->guest = $guest;
    }

    /**
     * Get guest.
     *
     * @return mixed
     */
    public function getGuest()
    {
        return $this->guest;
    }

    /**
     * Set greetings.
     *
     * @param $greetings
     */
    public function setGreetings($greetings)
    {
        $this->greetings = $greetings;
    }

    /**
     * Get greetings.
     *
     * @return mixed
     */
    public function getGreetings()
    {
        return $this->greetings;
    }

    /**
     * Set greetingComments.
     *
     * @param $greetingComments
     */
    public function setGreetingComments($greetingComments)
    {
        $this->greetingComments = $greetingComments;
    }

    /**
     * Get greetingComments.
     *
     * @return mixed
     */
    public function getGreetingComments()
    {
        return $this->greetingComments;
    }

    /**
     * Set picture.
     *
     * @param $picture
     */
    public function setPicture($picture)
    {
        $this->picture = $picture;
    }

    /**
     * Get picture.
     *
     * @return mixed
     */
    public function getPicture()
    {
        return $this->picture;
    }

    /**
     * Add greeting.
     *
     * @param \AdminBundle\Entity\Greeting $greeting
     *
     * @return User
     */
    public function addGreeting(\AdminBundle\Entity\Greeting $greeting)
    {
        $this->greetings[] = $greeting;

        return $this;
    }

    /**
     * Remove greeting.
     *
     * @param \AdminBundle\Entity\Greeting $greeting
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removeGreeting(\AdminBundle\Entity\Greeting $greeting)
    {
        return $this->greetings->removeElement($greeting);
    }

    /**
     * Add greetingComment.
     *
     * @param \AdminBundle\Entity\GreetingComment $greetingComment
     *
     * @return User
     */
    public function addGreetingComment(\AdminBundle\Entity\GreetingComment $greetingComment)
    {
        $this->greetingComments[] = $greetingComment;

        return $this;
    }

    /**
     * Remove greetingComment.
     *
     * @param \AdminBundle\Entity\GreetingComment $greetingComment
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removeGreetingComment(\AdminBundle\Entity\GreetingComment $greetingComment)
    {
        return $this->greetingComments->removeElement($greetingComment);
    }

    /**
     * Add postComment.
     *
     * @param \AdminBundle\Entity\PostComment $postComment
     *
     * @return User
     */
    public function addPostComment(\AdminBundle\Entity\PostComment $postComment)
    {
        $this->postComments[] = $postComment;

        return $this;
    }

    /**
     * Remove postComment.
     *
     * @param \AdminBundle\Entity\PostComment $postComment
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removePostComment(\AdminBundle\Entity\PostComment $postComment)
    {
        return $this->postComments->removeElement($postComment);
    }

    /**
     * Get postComments.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPostComments()
    {
        return $this->postComments;
    }

    /**
     * Set pictureFile
     *
     * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
     * of 'UploadedFile' is injected into this setter to trigger the  update. If this
     * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
     * must be able to accept an instance of 'File' as the bundle will inject one here
     * during Doctrine hydration.
     *
     * @param File|null $file
     */
    public function setPictureFile(File $file = null)
    {
        $this->pictureFile = $file;

        if ($file) {
            // It is required that at least one field changes if you are using doctrine
            // otherwise the event listeners won't be called and the file is lost
            $this->updatedAt = new \DateTime('now');
        }
    }

    /**
     * Get pictureFile
     *
     * @return null|File
     */
    public function getPictureFile()
    {
        return $this->pictureFile;
    }
}
