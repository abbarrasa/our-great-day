<?php

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;

/**
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */
class User extends BaseUser
{
    const PICTURE_WEB_DIR = 'uploads/user';
    
    /**
     * @var int $id
     */
    protected $id;
    protected $guest;
    protected $greetings;
    protected $greetingComments;
    protected $postComments;
    protected $picture;

    /**
     * Get id.
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set guest.
     *
     * @param $guest
     */
    public function setGuest($guest)
    {
        $this->guest = $guest;
    }

    /**
     * Get guest.
     *
     * @return mixed
     */
    public function getGuest()
    {
        return $this->guest;
    }

    /**
     * Set greetings.
     *
     * @param $greetings
     */
    public function setGreetings($greetings)
    {
        $this->greetings = $greetings;
    }

    /**
     * Get greetings.
     *
     * @return mixed
     */
    public function getGreetings()
    {
        return $this->greetings;
    }

    /**
     * Set greetingComments.
     *
     * @param $greetingComments
     */
    public function setGreetingComments($greetingComments)
    {
        $this->greetingComments = $greetingComments;
    }

    /**
     * Get greetingComments.
     *
     * @return mixed
     */
    public function getGreetingComments()
    {
        return $this->greetingComments;
    }

    /**
     * Set picture.
     *
     * @param $picture
     */
    public function setPicture($picture)
    {
        $this->picture = $picture;
    }

    /**
     * Get picture.
     *
     * @return mixed
     */
    public function getPicture()
    {
        return $this->picture;
    }

    /**
     * Add greeting.
     *
     * @param \AdminBundle\Entity\Greeting $greeting
     *
     * @return User
     */
    public function addGreeting(\AdminBundle\Entity\Greeting $greeting)
    {
        $this->greetings[] = $greeting;

        return $this;
    }

    /**
     * Remove greeting.
     *
     * @param \AdminBundle\Entity\Greeting $greeting
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removeGreeting(\AdminBundle\Entity\Greeting $greeting)
    {
        return $this->greetings->removeElement($greeting);
    }

    /**
     * Add greetingComment.
     *
     * @param \AdminBundle\Entity\GreetingComment $greetingComment
     *
     * @return User
     */
    public function addGreetingComment(\AdminBundle\Entity\GreetingComment $greetingComment)
    {
        $this->greetingComments[] = $greetingComment;

        return $this;
    }

    /**
     * Remove greetingComment.
     *
     * @param \AdminBundle\Entity\GreetingComment $greetingComment
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removeGreetingComment(\AdminBundle\Entity\GreetingComment $greetingComment)
    {
        return $this->greetingComments->removeElement($greetingComment);
    }

    /**
     * Add postComment.
     *
     * @param \AdminBundle\Entity\PostComment $postComment
     *
     * @return User
     */
    public function addPostComment(\AdminBundle\Entity\PostComment $postComment)
    {
        $this->postComments[] = $postComment;

        return $this;
    }

    /**
     * Remove postComment.
     *
     * @param \AdminBundle\Entity\PostComment $postComment
     *
     * @return boolean TRUE if this collection contained the specified element, FALSE otherwise.
     */
    public function removePostComment(\AdminBundle\Entity\PostComment $postComment)
    {
        return $this->postComments->removeElement($postComment);
    }

    /**
     * Get postComments.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPostComments()
    {
        return $this->postComments;
    }
    
    /**
     * Get absolute directory path for picture
     *
     * @return string
     */
    static public function getUploadRootDir()
    {
        return __DIR__.'/../../../../web/'.self::PICTURE_WEB_DIR;        
    }
    
    /**
     * Get absolute picture path
     *
     * @return string
     */
    public function getAbsolutePath()
    {
        return null === $this->picture
            ? null
            : $this->getUploadRootDir().'/'.$this->picture
        ;        
    }    
}